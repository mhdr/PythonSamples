From: <Saved by Mozilla 5.0 (X11)>
Subject: Python String Format Cookbook | mkaz.com
Date: Fri, 12 Dec 2014 23:27:27 +0330
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_C6FE8506.3927702E"
X-MAF-Information: Produced By MAF V3.0.3

This is a multi-part message in MIME format.

------=_NextPart_000_0000_C6FE8506.3927702E
Content-Type: text/html;
	charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/20141212232545/index.html

<!DOCTYPE html><html lang=3D"en-US"><head>
<meta http-equiv=3D"content-type" content=3D"text/html; charset=3DUTF-8">
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">

<meta charset=3D"UTF-8">
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1">
<title>Python String Format Cookbook | mkaz.com</title>
<link rel=3D"profile" href=3D"http://gmpg.org/xfn/11">
<link rel=3D"pingback" href=3D"https://mkaz.com/xmlrpc.php">

<!-- Jetpack Site Verification Tags -->
<meta name=3D"google-site-verification" content=3D"SNJizUfe0njNJb1q56wm0Yj5=
2NmF2RWC2X1kyIl186k">
<meta name=3D"msvalidate.01" content=3D"A2298733812DB5302467A5703908C35A">
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"mkaz.com =C2=
=BB Feed" href=3D"https://mkaz.com/feed/">
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"mkaz.com =C2=
=BB Comments Feed" href=3D"https://mkaz.com/comments/feed/">
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"mkaz.com =C2=
=BB Python String Format Cookbook Comments Feed" href=3D"https://mkaz.com/2=
012/10/10/python-string-format/feed/">








<link rel=3D"EditURI" type=3D"application/rsd+xml" title=3D"RSD" href=3D"ht=
tps://mkaz.com/xmlrpc.php?rsd">
<link rel=3D"wlwmanifest" type=3D"application/wlwmanifest+xml" href=3D"http=
s://mkaz.com/wp-includes/wlwmanifest.xml">=20
<link rel=3D"prev" title=3D"xkcd graph style in d3" href=3D"https://mkaz.co=
m/2012/10/01/xkcd-graph-style-in-d3/">
<link rel=3D"next" title=3D"Python Dates" href=3D"https://mkaz.com/2012/10/=
27/python-dates/">
<meta name=3D"generator" content=3D"WordPress 4.0.1">
<link rel=3D"canonical" href=3D"https://mkaz.com/2012/10/10/python-string-f=
ormat/">
<link rel=3D"shortlink" href=3D"http://wp.me/p2XZxB-aV">

<!-- Jetpack Open Graph Tags -->
<meta property=3D"og:type" content=3D"article">
<meta property=3D"og:title" content=3D"Python String Format Cookbook">
<meta property=3D"og:url" content=3D"https://mkaz.com/2012/10/10/python-str=
ing-format/">
<meta property=3D"og:description" content=3D"Every time I use Python's stri=
ng formatter, version 2.7 and up, I get it wrong and for the life of me I=
 can't figure out their documentation format. I got very used to the older=
 % method. So I star...">
<meta property=3D"article:published_time" content=3D"2012-10-10T13:10:22+00=
:00">
<meta property=3D"article:modified_time" content=3D"2014-07-26T14:16:42+00:=
00">
<meta property=3D"article:author" content=3D"https://mkaz.com/author/mkaz/">
<meta property=3D"og:site_name" content=3D"mkaz.com">
<meta property=3D"og:image" content=3D"https://s0.wp.com/i/blank.jpg">
<meta name=3D"twitter:site" content=3D"@mkaz">
<meta name=3D"twitter:card" content=3D"summary">


<link rel=3D"stylesheet" type=3D"text/css" href=3D"urn:snapshot-C37732F4:fi=
le:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/2014121=
2232545/index.css" media=3D"all">
</head>
<body class=3D"single single-post postid-677 single-format-standard custom-=
background">
<div id=3D"page" class=3D"hfeed site">

=09

	<div id=3D"content" class=3D"site-content">

	<div id=3D"primary" class=3D"content-area">
		<main id=3D"main" class=3D"site-main" role=3D"main">

	=09
		=09
<article id=3D"post-677" class=3D"post-677 post type-post status-publish fo=
rmat-standard hentry category-solutions-log tag-python tag-string-format">
	<header class=3D"entry-header">
		<h1 class=3D"entry-title">Python String Format Cookbook</h1>
	=09
	</header>

	<div class=3D"entry-content">
		<p>Every time I use Python=E2=80=99s string formatter, version 2.7 and up=
,  I get it wrong and for the life of me I can=E2=80=99t figure out their=
 documentation format. I got very used to the older % method. So I started=
 to create my own string format cookbook. Let me know in the comments of an=
y other good example to include.</p>
<h2>String Formatting Cookbook</h2>
<h3>Number Formatting</h3>
<p>The following table shows various ways to format numbers using python=E2=
=80=99s <i>newish</i> str.format(), examples for both float formatting and=
 integers.</p>
<p>To run examples use <code> print("FORMAT".format(NUMBER)); </code><br>
So to get the output of the first example, you would run: <code> print("{:.=
2f}".format(3.1415926));</code></p>
<table>
<tbody><tr>
<th>Number </th>
<th> Format </th>
<th> Output </th>
<th> Description </th>
</tr>
<tr>
<td> 3.1415926 </td>
<td> {:.2f} </td>
<td> 3.14 </td>
<td> 2 decimal places </td>
</tr>
<tr>
<td> 3.1415926 </td>
<td> {:+.2f} </td>
<td> +3.14 </td>
<td> 2 decimal places with sign </td>
</tr>
<tr>
<td> -1 </td>
<td> {:+.2f} </td>
<td> -1.00 </td>
<td>  2 decimal places with sign </td>
</tr>
<tr>
<td> 2.71828 </td>
<td> {:.0f} </td>
<td> 3 </td>
<td> No decimal places </td>
</tr>
<tr>
<td> 5 </td>
<td> {:0&gt;2d} </td>
<td> 05 </td>
<td> Pad number with zeros (left padding, width 2) </td>
</tr>
<tr>
<td> 5 </td>
<td> {:x&lt;4d} </td>
<td> 5xxx </td>
<td> Pad number with x=E2=80=99s (right padding, width 4) </td>
</tr>
<tr>
<td> 10 </td>
<td> {:x&lt;4d} </td>
<td> 10xx </td>
<td> Pad number with x=E2=80=99s (right padding, width 4) </td>
</tr>
<tr>
<td> 1000000 </td>
<td> {:,} </td>
<td> 1,000,000 </td>
<td> Number format with comma separator </td>
</tr>
<tr>
<td> 0.25 </td>
<td> {:.2%} </td>
<td> 25.00% </td>
<td> Format percentage </td>
</tr>
<tr>
<td> 1000000000 </td>
<td> {:.2e} </td>
<td> 1.00e+09 </td>
<td> Exponent notation </td>
</tr>
<tr>
<td> 13 </td>
<td> {:10d} </td>
<td>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A013</td>
<td> Right aligned (default, width 10) </td>
</tr>
<tr>
<td> 13 </td>
<td> {:&lt;10d} </td>
<td> 13 </td>
<td> Left aligned (width 10)</td>
</tr>
<tr>
<td> 13 </td>
<td> {:^10d} </td>
<td> =C2=A0=C2=A0=C2=A0=C2=A013 </td>
<td> Center aligned (width 10) </td>
</tr>
</tbody></table>
<h2>string.format() basics</h2>
<p>Here are a couple of example of basic string substitution, the <code>{}<=
/code> is the placeholder for the substituted variables. If no format is sp=
ecified, it will insert and format as a string.</p>
<pre><code class=3D"python">s1 =3D "so much depends upon {}".format("a red=
 wheel barrow")
s2 =3D "glazed with {} water beside the {} chickens".format("rain", "white")
</code></pre>
<p>You can also use the numeric position of the variables and change them=
 in the strings, this gives some flexibility when doing the formatting, if=
 you made a mistake in the order you can easily correct without shuffling=
 all variables around.</p>
<pre><code class=3D"python">s1 =3D " {0} is better than {1} ".format("emacs=
", "vim")
s2 =3D " {1} is better than {0} ".format("emacs", "vim")
</code></pre>
<h2>Older =E2=80=9C%=E2=80=9D string formatter</h2>
<p>Prior to python 2.6, the way to format strings tended to be a bit simple=
r, though limited with the number of arguments it can receive. These method=
s still work as of Python 3.3, but there are veiled threats of deprecating=
 them completely though no time table. [<a href=3D"http://www.python.org/de=
v/peps/pep-3101/">PEP-3101</a>]</p>
<h3>Formating a floating point number:</h3>
<pre><code class=3D"python">pi =3D 3.14159
print(" pi =3D %1.2f " % pi)
</code></pre>
<h3>Multiple Substitution Values</h3>
<pre><code class=3D"python">s1 =3D "cats"
s2 =3D "dogs"
s3 =3D " %s and %s living together" % (s1, s2)
</code></pre>
<h3>Not Enough Arguments</h3>
<p>Using the older format method, I would often get the error =E2=80=9CType=
Error: not enough arguments for format string=E2=80=9D because I miscounted=
 my substitution, do something like the following made it easy to miss a va=
riable.</p>
<pre><code class=3D"python">set =3D " (%s, %s, %s, %s, %s, %s, %s, %s) " %=
 (a,b,c,d,e,f,g,h,i)
</code></pre>
<p>The new python string formatter you can use numbered parameters so you=
 don=E2=80=99t have to count how many you have, at least on half of it.</p>
<pre><code class=3D"python">set =3D " ({0}, {1}, {2}, {3}, {4}, {5}, {6},=
 {7}) ".format(a,b,c,d,e,f,g)
</code></pre>
<h2>More String Formatting with .format()</h2>
<p>The format() function offers a fair amount of additional features and ca=
pabilities, here are a few useful tips and tricks using .format()</p>
<h3>Named Arguments</h3>
<p>You can use the new string format as a templating engine and use named=
 arguments, instead of requiring a strict order.</p>
<pre><code class=3D"python">madlib =3D " I {verb} the {object} off the {pla=
ce} ".format(verb=3D"took", object=3D"cheese", place=3D"table")
&gt;&gt;&gt; I took the cheese off the table
</code></pre>
<h3>Reuse Same Variable Multiple Times</h3>
<p>Using the % formatter, requires a strict ordering of variables, the .for=
mat() method allows you to put them in any order as we saw above in the bas=
ics, but also allows for reuse.</p>
<pre><code class=3D"python">str =3D "Oh {0}, {0}! wherefore art thou {0}?".=
format("Romeo")
&gt;&gt;&gt; Oh Romeo, Romeo! wherefore art thou Romeo?
</code></pre>
<h3>Convert Values to different Bases</h3>
<p>You can use the following letters to convert a number to their bases, <b=
>d</b>ecimal, he<b>x</b>, <b>o</b>ctal, <b>b</b>inary</p>
<pre><code class=3D"python">print("{0:d} - {0:x} - {0:o} - {0:b} ".format(2=
1))
&gt;&gt;&gt; 21 - 15 - 25 - 10101
</code></pre>
<h3>Use Format as a Function</h3>
<p>You can use .format as a function which allows for some separation of te=
xt and formatting from code. For example at the beginning of your program=
 you could include all your formats and then use later. This also could be=
 a nice way to handle internationalization which not only requires differen=
t text but often requires different formats for numbers.</p>
<pre><code class=3D"python">## defining formats
email_f =3D "Your email address was {email}".format

## use elsewhere
print(email_f(email=3D"bob@example.com"))
</code></pre>
<p>Hat tip to <a href=3D"http://www.reddit.com/r/Python/comments/174e1i/pyt=
hon_string_format_cookbook/c82ot0h">earthboundkids</a> who provided this on=
 reddit.</p>
<h3> Escaping Braces </h3>
<p>If you need to use braces when using str.format(), just double up</p>
<pre><code class=3D"python">print(" The {} set is often represented as {{0}=
} ".format("empty"))
&gt;&gt;&gt; The empty set is often represented as {0}
</code></pre>
<h3> Reference </h3>
<ul>
<li> <a href=3D"http://docs.python.org/3/library/string.html">Python String=
 Library</a> =E2=80=93 Standard Library Documentation </li>
<li> <a href=3D"http://www.amazon.com/gp/product/0672329786/ref=3Das_li_ss_=
tl?ie=3DUTF8&amp;camp=3D1789&amp;creative=3D390957&amp;creativeASIN=3D06723=
29786&amp;linkCode=3Das2&amp;tag=3Dmkazcom-20">Python Essential Reference</=
a> =E2=80=93 book on Amazon </li>
<li>My <a href=3D"https://mkaz.com/2014/07/26/python-argparse-cookbook/">Py=
thon Argparse Cookbook</a> =E2=80=93 a similar cookbook for parsing command=
-line arguments</li>
</ul>
			</div>

=09
</article>

				<nav class=3D"navigation post-navigation" role=3D"navigation">
		<h1 class=3D"screen-reader-text">Post navigation</h1>
		<div class=3D"nav-links">
			<div class=3D"nav-previous"></div><div class=3D"nav-next"></div>		</div>=
<!-- .nav-links -->
	</nav><!-- .navigation -->
=09
		=09
<div id=3D"comments" class=3D"comments-area">

		=09

	=09
	=09

	=09
=09
=09
									<div id=3D"respond" class=3D"comment-respond">
			=09
								=09
							</div><!-- #respond -->
		=09
</div>

	=09
		</main>
	</div>



	</div>

=09
</div>

		<iframe src=3D"urn:snapshot-3F11913C:file:///home/mahmood/.mozilla/firefo=
x/bx40q2ki.default/ScrapBook/data/20141212232545/index_3.html" scrolling=3D=
"no" id=3D"likes-master" name=3D"likes-master" style=3D"display: none;"></i=
frame>
		<div id=3D"likes-other-gravatars"><div class=3D"likes-text"><span>%d</spa=
n> bloggers like this:</div><ul class=3D"wpl-avatars sd-like-gravatars"></u=
l></div>





=09
	<img scale=3D"0" id=3D"wpstats" src=3D"file:///home/mahmood/.mozilla/firef=
ox/bx40q2ki.default/ScrapBook/data/20141212232545/g.gif" alt=3D"">








</body></html>
------=_NextPart_000_0000_C6FE8506.3927702E
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: file:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/20141212232545/g.gif

R0lGODlhBgAFAIABAAAAAP///yH5BAEAAAEALAAAAAAGAAUAAAIJDGJ4ic1qgAwFADs=
------=_NextPart_000_0000_C6FE8506.3927702E
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: urn:snapshot-C37732F4:file:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/20141212232545/index.css

/* Effective stylesheet produced by snapshot save */
@font-face {
  font-family: "Genericons";
  font-style: normal;
  font-weight: normal;
  src: url("urn:not-loaded:file:///home/mahmood/.mozilla/firefox/bx40q2ki.d=
efault/ScrapBook/data/20141212232545/genericons-regular-webfont.eot") forma=
t("embedded-opentype"), url("file:///home/mahmood/.mozilla/firefox/bx40q2ki=
.default/ScrapBook/data/20141212232545/genericons-regular-webfont.woff") fo=
rmat("woff"), url("urn:not-loaded:file:///home/mahmood/.mozilla/firefox/bx4=
0q2ki.default/ScrapBook/data/20141212232545/genericons-regular-webfont.ttf"=
) format("truetype"), url("urn:not-loaded:file:///home/mahmood/.mozilla/fir=
efox/bx40q2ki.default/ScrapBook/data/20141212232545/genericons-regular-webf=
ont.svg") format("svg");
}
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p,=
 blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em,=
 font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl,=
 dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody,=
 tfoot, thead, tr, th, td { border: 0px none; font-family: inherit; font-si=
ze: 100%; font-style: inherit; font-weight: inherit; margin: 0px; outline:=
 0px none; padding: 0px; vertical-align: baseline; }
html { font-size: 62.5%; overflow-y: scroll; box-sizing: border-box; }
*, *:before, *:after { box-sizing: inherit; }
body { background: none repeat scroll 0% 0% rgb(255, 255, 255); }
article, aside, details, figcaption, figure, footer, header, main, nav, sec=
tion { display: block; }
ol, ul { list-style: outside none none; }
table { border-collapse: collapse; border-spacing: 0px; margin: 0px 0px 1.5=
em; width: 100%; }
th { font-weight: bold; }
th, td { border: 1px solid rgb(234, 234, 234); padding: 6px 10px; }
caption, th, td { text-align: left; }
a, a:visited { color: royalblue; text-decoration: none; }
a:hover, a:focus, a:active { color: rgb(238, 64, 64); }
a:focus { outline: thin dotted; }
a:hover, a:active { outline: 0px none; }
body, button, input, select, textarea { color: rgb(68, 68, 68); font-family=
: "Source Sans Pro","Droid Sans",sans-serif; font-size: 1.6rem; line-height=
: 1.5; }
h1, h2, h3, h4, h5, h6 { clear: both; }
p { margin-bottom: 1.5em; }
b, strong { font-weight: bold; }
dfn, cite, em, i { font-style: italic; }
pre { background: none repeat scroll 0% 0% rgb(248, 248, 248); border: 1px=
 solid rgb(221, 221, 221); color: black; margin-bottom: 1.6em; max-width:=
 100%; overflow: auto; padding: 0.8em; font-family: Consolas,"Liberation Mo=
no",Menlo,Courier,monospace; font-weight: normal ! important; font-style:=
 normal ! important; font-size: 13px ! important; line-height: 1.4em; }
code, kbd, tt, var { font-family: Consolas,"Liberation Mono",Menlo,Courier,=
monospace; font-weight: normal ! important; font-style: normal ! important;=
 font-size: 13px ! important; line-height: 1.4em; }
ul, ol { margin: 0px 0px 1.5em 3em; }
ul { list-style: outside none square; }
img { height: auto; max-width: 100%; }
table { margin: 0px 0px 1.5em; width: 100%; }
th { font-weight: bold; }
.site-main .comment-navigation, .site-main .paging-navigation, .site-main=
 .post-navigation { margin: 2em auto 1.5em; overflow: hidden; max-width: 72=
0px; }
.comment-navigation .nav-previous, .paging-navigation .nav-previous, .post-=
navigation .nav-previous { float: left; width: 50%; }
.comment-navigation .nav-next, .paging-navigation .nav-next, .post-navigati=
on .nav-next { float: right; text-align: right; width: 50%; }
.screen-reader-text { clip: rect(1px, 1px, 1px, 1px); position: absolute !=
 important; height: 1px; width: 1px; overflow: hidden; }
.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:=
focus { background-color: rgb(241, 241, 241); border-radius: 3px; box-shado=
w: 0px 0px 2px 2px rgba(0, 0, 0, 0.6); clip: auto ! important; color: rgb(3=
3, 117, 155); display: block; font-size: 1.4rem; font-weight: bold; height:=
 auto; left: 5px; line-height: normal; padding: 15px 23px 14px; text-decora=
tion: none; top: 5px; width: auto; z-index: 100000; }
.clear:before, .clear:after, .entry-content:before, .entry-content:after,=
 .comment-content:before, .comment-content:after, .site-header:before, .sit=
e-header:after, .site-content:before, .site-content:after, .site-footer:bef=
ore, .site-footer:after { content: ""; display: table; }
.clear:after, .entry-content:after, .comment-content:after, .site-header:af=
ter, .site-content:after, .site-footer:after { clear: both; }
#page { width: 100%; margin: 0px auto; padding: 0px 5%; }
article { margin: 32px auto 64px; max-width: 640px; }
article header.entry-header, article footer.entry-footer { max-width: 640px=
; margin: 0px auto; }
h1, h2, h3, h4, h5, h6 { font-family: "Lucida Sans Unicode","Lucida Grande"=
,sans-serif; font-weight: 600; }
h1 { font-size: 2.4rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.8rem; }
h1.entry-title { font-size: 2.4rem; font-weight: 600; }
.byline, .updated:not(.published) { display: none; }
.page-content, .entry-content, .entry-summary { margin: 1.5em 0px 0px; }
div.entry-content h2, div.entry-content h3, div.entry-content h4, div.entry=
-content h5, div.entry-content h6 { margin-top: 3rem; margin-bottom: 0.75re=
m; }
.comments-area { max-width: 640px; margin: 0px auto; }
embed, iframe, object { max-width: 100%; }
.screen-reader-text { position: absolute; top: -9999em; left: -9999em; }
.jp-carousel-info *::-moz-selection { background: none repeat scroll 0% 0%=
 rgb(104, 201, 232); color: rgb(255, 255, 255); }
#likes-other-gravatars { display: none; position: absolute; padding: 10px;=
 background-color: rgb(0, 0, 0); border-width: 0px; opacity: 0.88; box-shad=
ow: 0px 0px 10px rgb(0, 0, 0); min-width: 130px; z-index: 1000; }
#likes-other-gravatars * { line-height: normal; }
#likes-other-gravatars .likes-text { color: rgb(255, 255, 255); font-size:=
 14px; padding-bottom: 5px; }
#likes-other-gravatars li, #likes-other-gravatars ul { margin: 0px; padding=
: 0px; text-indent: 0px; list-style-type: none; }
#likes-other-gravatars ul.wpl-avatars { overflow: auto; display: block; pos=
ition: absolute; max-height: 190px; }
@media only screen and (max-width: 640px) {
  div#jp-relatedposts div.jp-relatedposts-items .jp-relatedposts-post:nth-c=
hild(3n) { clear: left; }
}
body div div.slideshow-controls a.running, body div div.slideshow-controls=
 a:nth-child(2) { background-position: -34px 8px ! important; }
.presentation .step.fade:not(.active) { opacity: 0; }
.widget-grid-view-image:nth-child(2n) a { margin: 0px 0px 4px 2px; }

------=_NextPart_000_0000_C6FE8506.3927702E
Content-Type: application/font-woff
Content-Transfer-Encoding: base64
Content-Location: file:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/20141212232545/genericons-regular-webfont.woff

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
sPbobmVkBFO4I2oxCoLbfUNLZ0UfumT3UUwBS8waYn2Q2ucapHANm38OQ7cFXp9Sly2o2VGsAZ7i
/NP7rAaYi8v6uMxZCgbtJ7iTJ6/9hB/meL2hUgGMFM6mbMGsXxfkUzpOapE+klroCDtwhEXRykSq
1gVJDPtj5Kx3XDU4VavBAZnUlHBr10oG0QYkqqFqjZ5GLBhMqB9FARFIbS43lluMUp6r4grE+5iJ
UfIjFVTNPACJy4+UV1EfPYMNNGx/D+Q5DUNxDsD+VlLdv7gpUUm12ERXVufCGIorymQzG3VlRcqy
ttID7z7wAALWBx54l66FkcIRrh94AFrQMuMlrsiAw+i7WHOjEPUTgsSeY/VWGN8fOW98P4V1VyP4
bzSv5gzgUs80JuBvbGW3Vewi5FndFsfqtli7nozm4S4V8pWaLg7zHaIAjfj6WCL/F8P1u2sAAHja
Y2BkYGBgZjjy6Mpmh3h+m68M8hwMIHDua+N+ZJqDgQNCMYEoAHf+C1gAeNpjYGRg4GD4fwNEMjD8
/w8kgSIogBUAY/wD9XjaNU+7FcJADJNNCvq87MMOvEdNxRyq0mWH1GEWegZhACz54nvnj+yTzvGD
LQ8gKr8iEQDBRDKqgmqZMMq7/y5kd/UdCLFiC+ITZiivaz6fR0er6d054SksUgzmU3qFEXdFzV2E
z8Ywlc/m5Pilsr2VWitP/bGJ4wvDWi96P3Not+n2B3lgIYIAAAAmACYAJgAuAJIA3gFaAaABrgHk
AjoC1AMkA4IEUAUiBXAFzgYgBw4H7ghiCPYJsgp4Cq4LCAs2C4AMHAyiDiAPnBBAEUYRvBMwE7wU
HhRaFIYUshTcFVAVgBX6FpYXXBeSF/AYYBkCGYgaBhooGkoa1BryGyQbQBtsG5Yb+Bw2HLAdLh1y
HYYdsh4cHjYeYB7iHyYf3iAgIFIgdCCaILIgxiDcIPAhBiEkIegiOCK6IxAjeCPQJDQkbCS8JVIl
riYWJjomWCZ2JpQmoib0J3QnvCgGKJAopii8KQApIilMKcgqJCpiKpwqyCsUK2QrvCwWLFYsnizg
LPYtBC0SLSAAAAABAAAAgAC9ABAAAAAAAAIAAQACABYAAAEAAYEAAAAAeNqNkr1OAkEUhc8CmmBh
RSysNtFCTfiXqFBZiIkaQzRqZ7KaBYz8CStg4/PpC1j6EJZWfjMMwSCFmczOuWfOPffOzEpa0avi
8hJJSZ/MCfaUIprgmFb15XBcZW+qSWjTKzu8pLF36/Ay/IfDSa173w6/aS2WcvhdudiOjlXTmXwN
FaqvgR7UVYe4wOzC+AqIX1hboMiq/qpHoEhNUN0yESjUWPd8e0RT3RaaiNFTWVnGyI6MGuw+s5qK
DfgWGSa3Q42QmYXtwabxD/SE0vi0YTZUdRWP/tTb5nTGw/Rq/LrW74K4QTVznr6KeOUYRVV0pVPd
6By0KC89l7lI489prufu6Xe1mi5hJtGMbaKMnN+Q/bzdy2iPb4UTB3rE02jqsOae7nirjEp27uNR
0MG/+j+BD21Xh+y24Qf2tjvcQYjr7CUnPVStm09eYLPycKb/Em9Zoq755u2fk2Pd/QGe+3ARAAB4
2m3S1XIUURRG4VmDBHd3d5k+Z5/uBIdAcHd3CRI0OBRPyCshmRWu6Kqp/6brm9qrutVujTy/frZS
63/Pjz8/Wm3ajGEs4xhPDxOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1
rGM9G9jIJjazha1sYzsdKhKZoFDT0EsfO9jJLnazh73sYz8H6OcghxjgMEc4yjGOc4KTnOI0ZzjL
Oc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxTxjkKc94zguGeMkrXvOGt7xjmPd84COf+MwX
vvKN7z3DQ4OpDPT/3YGq03ErN7nZDbe4tdu4vW7fyCa9pJf0kl7SS3pJL+klvTTqVXqVXqVX6VV6
lV6lV+lVepVe0kt6SS/pJb3U9bL3ZO/J3pO9J3tP7oy+X7uN2/3/0Amd0Amd0Amd0Amd+Od07wi7
hF3CLmGXsEvYJewSdgm7hF3CLmGXsEvYJewSdomkl/SSXtLLelkv62W9rJf1sl7Wy3pZL/RCL/RC
L/RCL/RCL/RCr+gVvaJX9Ipe0St6Ra/oFb1ar9ar9Wq9Wq/Wq/VqvVqv1mv0Gr1Gr9Frul7xuyp+
V8XvqnTyb1UoNRm4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFhZsBQr
AAAAAVLP0T8AAA==
------=_NextPart_000_0000_C6FE8506.3927702E
Content-Type: text/html;
	charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: urn:snapshot-3F11913C:file:///home/mahmood/.mozilla/firefox/bx40q2ki.default/ScrapBook/data/20141212232545/index_3.html

<!DOCTYPE html><html><head>
<meta http-equiv=3D"content-type" content=3D"text/html; charset=3DUTF-8">
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
</head>
<body>
		<div id=3D"target"></div>
=09



</body></html>
------=_NextPart_000_0000_C6FE8506.3927702E--
